
@{
    ViewData["Title"] = "7";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<html style="font-size: 16px;">
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta charset="utf-8">
    <meta name="keywords" content="Interior Workshop">

    <meta name="description" content="">
    <meta name="page_type" content="np-template-header-footer-from-plugin">
    <title>Yedi</title>

    <link rel="stylesheet" href="~/assets/template-assets/nicepage.css" media="screen">
    <link rel="stylesheet" href="~/assets/template-assets/About.css" media="screen">
    <script class="u-script" type="text/javascript" src="~/assets/template-assets/jquery.js" defer=""></script>
    <script class="u-script" type="text/javascript" src="~/assets/template-assets/nicepage.js" defer=""></script>
    <meta name="generator" content="Nicepage 3.16.1, nicepage.com">
    <link id="u-theme-google-font" rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:100,100i,300,300i,400,400i,500,500i,700,700i,900,900i|Open+Sans:300,300i,400,400i,600,600i,700,700i,800,800i">

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">


    <script type="application/ld+json">
        {
        "context": "http://schema.org",
        "type": "Organization",
        "name": "Site1",
        "url": "index.html",
        "logo": "images/71.png",
        "sameAs": [
        "https://facebook.com/name",
        "https://twitter.com/name",
        "https://www.instagram.com/name"
        ]
        }
    </script>
    <meta property="og:title" content="About">
    <meta property="og:type" content="website">
    <meta name="theme-color" content="#478ac9">
    <link rel="canonical" href="index.html">
    <meta property="og:url" content="index.html">
    <meta name="twitter:site" content="">
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="Yedi Tepe">
    <meta name="twitter:description" content="Site1">
</head>
<body data-home-page="About.html" data-home-page-title="About" class="u-body u-white">
    <section class="u-align-center u-clearfix u-shading u-valign-middle u-section-1" id="carousel_e037">
        <div class="u-container-style u-expanded-width u-group u-opacity u-opacity-55 u-shading u-shape-rectangle u-video u-video-cover u-video-1" data-animation-name="pulse" data-animation-duration="1000" data-animation-delay="0" data-animation-direction="">
            <div style="filter: brightness(0.95);" class="u-absolute-hcenter u-background-video u-expanded">
                <div class="embed-responsive embed-responsive-1">
                    <iframe style="position: absolute;top: 0;left: 0;width: 100%;height: 100%;" class="embed-responsive-item" src="https://www.youtube.com/embed/WiVfeEvauSs?playlist=WiVfeEvauSs&amp;loop=1&amp;mute=1&amp;showinfo=0&amp;controls=0&amp;start=0&amp;autoplay=1" frameborder="0" allowfullscreen=""></iframe>
                </div>
            </div>
            <div class="u-container-layout u-container-layout-1">
                <div class="u-align-center u-container-style u-expanded-width u-group u-opacity u-opacity-60 u-palette-5-light-3 u-shape-rectangle u-group-2">
                    <div class="u-container-layout u-valign-middle u-container-layout-2">
                        <span class="u-align-center u-icon u-icon-circle u-text-palette-4-light-1 u-icon-1" data-animation-name="pulse" data-animation-duration="1000" data-animation-delay="0" data-animation-direction="">
                            <svg class="u-svg-link" preserveAspectRatio="xMidYMin slice" viewBox="0 0 512 512" style=""><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#svg-7645"></use></svg><svg class="u-svg-content" viewBox="0 0 512 512" id="svg-7645">
                                <g>
                                    <g>
                                        <path d="m430 28.409c-1.136-6.976-2.8-12.17-5.236-16.347-.031-.054-.063-.106-.096-.159-3.146-5.168-7.489-8.597-12.913-10.193-3.855-1.167-8.378-1.71-14.224-1.71h-291.069c-4.636 0-9.015 1.519-12.678 4.393-4.302 3.242-6.666 8.189-8.077 11.649-1.669 4.101-2.934 9.265-3.86 15.753-.841 5.744-1.268 12.749-1.268 20.819 0 16.785 1.482 28.43 4.667 36.643 5.521 14.569 15.66 16.747 21.216 16.747h190.221l-61.485 136.111c-2.273 5.033-.037 10.957 4.996 13.23 5.035 2.272 10.957.036 13.23-4.996l67.862-150.229c1.398-3.095 1.13-6.688-.712-9.541s-5.006-4.576-8.401-4.576h-205.711c-.156 0-.221-.018-.222-.018-.216-.097-1.24-1.031-2.303-3.845-.012-.031-.023-.063-.035-.094-1.517-3.897-3.323-12.168-3.323-29.434 0-7.004.365-13.201 1.062-17.957.688-4.815 1.559-8.541 2.589-11.068.932-2.287 1.553-3.12 1.716-3.317.059-.045.117-.09.175-.136.122-.098.182-.124.182-.124.002 0 .049-.012.16-.012h291.068c3.737 0 6.58.289 8.45.858.038.012.077.023.115.034.315.092.745.217 1.438 1.329.774 1.359 1.859 4.083 2.726 9.4.781 4.804 1.161 11.417 1.161 20.218 0 6.964-.246 13.075-.73 18.165-.53 5.577-1.161 10.204-1.928 14.148-.852 4.38-1.886 8.163-3.162 11.566-.032.087-.063.175-.094.263-1.253 3.646-2.894 7.805-5.021 12.724l-160.944 373.642c-1.199 2.448-2.354 3.718-3.157 4.388-.858.723-2.641 1.792-6.262 2.779-3.503.955-8.466 1.644-14.344 1.988-5.908.341-13.604.5-24.218.5-13.416 0-23.435-.401-30.608-1.224-8.937-1.043-12.496-2.546-13.611-3.144-.083-.045-.166-.088-.251-.13-.093-.047-.178-.091-.257-.134.141-.926.532-2.398 1.556-4.508.039-.081.078-.164.115-.246l67.86-150.226c2.273-5.033.037-10.957-4.996-13.23-5.036-2.273-10.957-.036-13.23 4.996l-67.809 150.11c-2.703 5.618-3.88 10.919-3.499 15.763.23 3.826 2.032 10.669 11.193 15.302 4.744 2.509 11.489 4.247 20.63 5.313 7.959.913 18.723 1.356 32.907 1.356 11.159 0 18.983-.164 25.38-.534 7.353-.432 13.558-1.326 18.444-2.659 5.809-1.584 10.35-3.801 13.843-6.743 3.354-2.795 6.189-6.574 8.425-11.232.06-.122.116-.246.17-.371l161.024-373.828c2.304-5.328 4.113-9.916 5.528-14.022 1.648-4.42 2.963-9.211 4.019-14.64.892-4.585 1.613-9.843 2.205-16.07.552-5.796.82-12.357.82-20.06.001-10.025-.45-17.47-1.419-23.43z"></path>
                                        <path d="m225.783 297.251c5.522 0 10-4.478 10-10s-4.478-10-10-10h-.008c-5.522 0-9.996 4.478-9.996 10s4.481 10 10.004 10z"></path>
                                    </g>
                                </g>
                            </svg>
                        </span>
                        <h4 class="u-align-center u-text u-text-palette-4-dark-2 u-text-1">İSTANBUL'A FARKLI BİR PENCEREDEN BAKIN</h4>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="u-clearfix u-palette-5-light-3 u-section-2" id="sec-2696">
        <div class="u-clearfix u-sheet u-sheet-1"></div>
    </section>
    <section class="u-clearfix u-section-3" id="carousel_2e9e">
        <div class="u-list u-list-1">
            <div class="u-repeater u-repeater-1">
                <div class="u-container-style u-list-item u-repeater-item">
                    <div class="u-container-layout u-similar-container u-valign-bottom u-container-layout-1">
                        <div class="u-image u-image-circle u-image-1" alt="" data-image-width="308" data-image-height="294" data-animation-name="flipIn" data-animation-duration="1000" data-animation-delay="0" data-animation-direction="X"></div>
                    </div>
                </div>
                <div class="u-container-style u-list-item u-repeater-item">
                    <div class="u-container-layout u-similar-container u-valign-bottom u-container-layout-2">
                        <div class="u-image u-image-circle u-image-2" alt="" data-image-width="244" data-image-height="187" data-animation-name="flipIn" data-animation-duration="1000" data-animation-delay="0" data-animation-direction="X"></div>
                    </div>
                </div>
                <div class="u-container-style u-list-item u-repeater-item">
                    <div class="u-container-layout u-similar-container u-valign-bottom u-container-layout-3">
                        <div class="u-image u-image-circle u-image-3" alt="" data-image-width="480" data-image-height="394" data-animation-name="flipIn" data-animation-duration="1000" data-animation-delay="0" data-animation-direction="X"></div>
                    </div>
                </div>
                <div class="u-container-style u-list-item u-repeater-item">
                    <div class="u-container-layout u-similar-container u-valign-bottom u-container-layout-4">
                        <div class="u-image u-image-circle u-image-4" alt="" data-image-width="457" data-image-height="401" data-animation-name="flipIn" data-animation-duration="1000" data-animation-delay="0" data-animation-direction="X"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="u-image u-image-circle u-image-5" alt="" data-image-width="457" data-image-height="401" data-animation-name="bounceIn" data-animation-duration="1000" data-animation-delay="0" data-animation-direction="Down"></div>
        <div class="u-container-style u-group u-group-1" data-animation-name="flipIn" data-animation-duration="1000" data-animation-delay="0" data-animation-direction="X">
            <div class="u-container-layout">
                <div class="u-expanded-height u-image u-image-circle u-image-6" alt="" data-image-width="351" data-image-height="354"></div>
                <div class="u-absolute-hcenter u-expanded-height u-image u-image-circle u-image-7" alt="" data-image-width="253" data-image-height="236"></div>
                <div class="u-image u-image-circle u-image-8" alt="" data-image-width="277" data-image-height="280"></div>
            </div>
        </div>
        <!-- <div class="u-image u-image-circle u-image-1" data-image-width="1413" data-image-height="890" data-animation-name="tada" data-animation-duration="1000" data-animation-delay="0" data-animation-direction=""></div>
        -->
        <div class="u-expanded-width u-shape u-shape-rectangle u-white u-shape-1"></div>
        <div class="u-clearfix u-gutter-26 u-layout-wrap u-layout-wrap-1">
            <div class="u-layout">
                <div class="u-layout-row">
                    <div class="u-size-15 u-size-30-md">
                        <div class="u-layout-col">
                            <div class="u-container-style u-hidden-sm u-hidden-xs u-layout-cell u-size-20 u-layout-cell-1">
                                <div class="u-container-layout u-container-layout-1"></div>
                            </div>
                            <div class="u-align-center u-container-style u-layout-cell u-palette-3-light-3 u-size-40 u-layout-cell-2">
                                <div class="u-container-layout u-valign-top u-container-layout-2">
                                    <span class="u-icon u-icon-circle u-palette-5-light-2 u-spacing-18 u-text-palette-3-light-1 u-icon-1">
                                        <svg class="u-svg-link" preserveAspectRatio="xMidYMin slice" viewBox="0 0 52 52" style=""><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#svg-7df0"></use></svg><svg class="u-svg-content" viewBox="0 0 52 52" x="0px" y="0px" id="svg-7df0" style="enable-background:new 0 0 52 52;">
                                            <path style="fill:currentColor;" d="M38.853,5.324L38.853,5.324c-7.098-7.098-18.607-7.098-25.706,0h0
        C6.751,11.72,6.031,23.763,11.459,31L26,52l14.541-21C45.969,23.763,45.249,11.72,38.853,5.324z M26.177,24c-3.314,0-6-2.686-6-6
        s2.686-6,6-6s6,2.686,6,6S29.491,24,26.177,24z"></path>
                                        </svg>
                                    </span>
                                    <pre>

</pre>
                                    <a class="btn btn-outline-secondary" asp-controller="home" asp-action="harita" role="button">
                                        HARİTALAR
                                    </a>
                                    İLE GEZİNİZİ PLANLAYIN
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="u-size-15 u-size-30-md">
                        <div class="u-layout-col">
                            <div class="u-align-center u-container-style u-layout-cell u-opacity u-opacity-95 u-palette-3-light-3 u-shape-rectangle u-size-40 u-layout-cell-3">
                                <div class="u-container-layout u-container-layout-3">
                                    <span class="u-icon u-icon-circle u-palette-5-light-2 u-spacing-18 u-icon-2">
                                        <svg class="u-svg-link" preserveAspectRatio="xMidYMin slice" viewBox="0 0 512 512" style=""><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#svg-f555"></use></svg><svg class="u-svg-content" viewBox="0 0 512 512" id="svg-f555">
                                            <g>
                                                <g>
                                                    <path d="m77.413 25.06h-17.543v-17.56c0-4.142-3.358-7.5-7.5-7.5s-7.5 3.358-7.5 7.5v17.56h-17.544c-4.142 0-7.5 3.358-7.5 7.5s3.358 7.5 7.5 7.5h17.544v17.56c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-17.56h17.543c4.142 0 7.5-3.358 7.5-7.5s-3.358-7.5-7.5-7.5z" fill="#ff528c"></path>
                                                    <path d="m484.326 471.94h-17.543v-17.56c0-4.142-3.358-7.5-7.5-7.5s-7.5 3.358-7.5 7.5v17.56h-17.543c-4.142 0-7.5 3.358-7.5 7.5s3.358 7.5 7.5 7.5h17.543v17.56c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-17.56h17.543c4.142 0 7.5-3.358 7.5-7.5s-3.358-7.5-7.5-7.5z" fill="#ff528c"></path>
                                                    <g fill="#85c5ff">
                                                        <path d="m76.569 486.994h-41.2c-4.142 0-7.5 3.358-7.5 7.5s3.358 7.5 7.5 7.5h41.2c4.142 0 7.5-3.358 7.5-7.5s-3.358-7.5-7.5-7.5z"></path>
                                                        <path d="m35.37 472.975h21.2c4.142 0 7.5-3.358 7.5-7.5s-3.358-7.5-7.5-7.5h-21.2c-4.142 0-7.5 3.358-7.5 7.5s3.358 7.5 7.5 7.5z"></path>
                                                        <path d="m435.126 44.019h41.2c4.142 0 7.5-3.358 7.5-7.5s-3.358-7.5-7.5-7.5h-41.2c-4.142 0-7.5 3.358-7.5 7.5s3.358 7.5 7.5 7.5z"></path>
                                                        <path d="m455.126 15h21.2c4.142 0 7.5-3.358 7.5-7.5s-3.358-7.5-7.5-7.5h-21.2c-4.142 0-7.5 3.358-7.5 7.5s3.358 7.5 7.5 7.5z"></path>
                                                    </g>
                                                </g>
                                                <g fill="#cdd5e0">
                                                    <path d="m173.435 40.283h-10.27v-14.674c0-4.142-3.358-7.5-7.5-7.5s-7.5 3.358-7.5 7.5v65.193c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-35.52h10.27c4.142 0 7.5-3.358 7.5-7.5s-3.358-7.499-7.5-7.499z"></path>
                                                    <path d="m376.13 444.109h-8.152v-22.326c0-4.142-3.358-7.5-7.5-7.5s-7.5 3.358-7.5 7.5v65.194c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-27.868h8.152c4.142 0 7.5-3.358 7.5-7.5s-3.358-7.5-7.5-7.5z"></path>
                                                    <path d="m87.674 157.685h-64.5c-4.142 0-7.5 3.358-7.5 7.5s3.358 7.5 7.5 7.5h9.717v9.706c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-9.706h39.783c4.142 0 7.5-3.358 7.5-7.5s-3.358-7.5-7.5-7.5z"></path>
                                                    <path d="m86.13 307.935h-40.16c-4.142 0-7.5 3.358-7.5 7.5s3.358 7.5 7.5 7.5h40.16c4.142 0 7.5-3.358 7.5-7.5s-3.358-7.5-7.5-7.5z"></path>
                                                    <path d="m488.826 248.752h-5v-12.361c0-4.142-3.358-7.5-7.5-7.5s-7.5 3.358-7.5 7.5v12.361h-47.304c-4.142 0-7.5 3.358-7.5 7.5s3.358 7.5 7.5 7.5h67.304c4.142 0 7.5-3.358 7.5-7.5s-3.358-7.5-7.5-7.5z"></path>
                                                    <path d="m419.663 164.016h39.62c4.142 0 7.5-3.358 7.5-7.5s-3.358-7.5-7.5-7.5h-39.62c-4.142 0-7.5 3.358-7.5 7.5s3.358 7.5 7.5 7.5z"></path>
                                                    <path d="m459.283 365.233h-39.62c-4.142 0-7.5 3.358-7.5 7.5s3.358 7.5 7.5 7.5h39.62c4.142 0 7.5-3.358 7.5-7.5s-3.358-7.5-7.5-7.5z"></path>
                                                    <path d="m155.665 414.283c-4.142 0-7.5 3.358-7.5 7.5v29.826c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-29.826c0-4.142-3.358-7.5-7.5-7.5z"></path>
                                                    <path d="m253.826 55.935c-4.142 0-7.5 3.358-7.5 7.5v24.699c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-24.699c0-4.143-3.358-7.5-7.5-7.5z"></path>
                                                    <path d="m373 98.302c4.142 0 7.5-3.358 7.5-7.5v-43.182c0-4.142-3.358-7.5-7.5-7.5s-7.5 3.358-7.5 7.5v43.183c0 4.141 3.358 7.499 7.5 7.499z"></path>
                                                    <path d="m253.826 416.367c-4.142 0-7.5 3.358-7.5 7.5v48.873c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-48.873c0-4.142-3.358-7.5-7.5-7.5z"></path>
                                                </g>
                                                <path d="m429.02 256.25c0 96.09-5.1 159.77-5.15 160.4-.29 3.55-3.03 6.41-6.57 6.84-.2.03-6.86.82-18.95 1.9-26.16 2.33-77.77 5.98-144.52 5.98-97.6 0-162.83-7.8-163.48-7.88-3.54-.43-6.28-3.29-6.57-6.84-.05-.63-5.15-64.31-5.15-160.4 0-96.08 5.1-160.26 5.15-160.9.29-3.55 3.03-6.41 6.57-6.84.65-.08 65.88-7.88 163.48-7.88 66.74 0 118.35 3.65 144.51 5.98 12.1 1.08 18.76 1.87 18.96 1.9 3.54.43 6.29 3.29 6.57 6.84.06.64 5.15 64.82 5.15 160.9z" fill="#85c5ff"></path>
                                                <path d="m423.87 95.35c.06.64 5.15 64.82 5.15 160.9 0 96.09-5.1 159.77-5.15 160.4-.29 3.55-3.03 6.41-6.57 6.84-.2.03-6.86.82-18.95 1.9 1.81-30.29 4.67-90.6 4.67-169.09 0-78.61-2.87-139.26-4.68-169.69 12.1 1.08 18.76 1.87 18.96 1.9 3.54.43 6.29 3.29 6.57 6.84z" fill="#7eaef2"></path>
                                                <g fill="#7eaef2">
                                                    <circle cx="124.326" cy="384.181" r="7.5"></circle>
                                                    <circle cx="253.826" cy="388.661" r="7.5"></circle>
                                                    <circle cx="383.326" cy="384.181" r="7.5"></circle>
                                                    <circle cx="124.326" cy="127.654" r="7.5"></circle>
                                                    <circle cx="253.826" cy="123.174" r="7.5"></circle>
                                                    <circle cx="383.326" cy="127.654" r="7.5"></circle>
                                                </g>
                                                <g>
                                                    <path d="m367.503 325.69c-17.171-18.03-24.686-40.223-27.42-50.477 11.173-5.462 19.456-13.689 24.05-23.932 8.676-19.345 2.989-43.791-13.829-59.448-18.522-17.243-44.898-19.306-70.556-5.518-2.694 1.447-4.239 4.385-3.905 7.424.074.676 7.329 68.352-.001 136.319-.444 4.118 2.534 7.817 6.652 8.261.273.03.544.044.813.044 3.781 0 7.033-2.852 7.447-6.696 1.784-16.543 2.725-33.077 3.12-48.671 11.901.537 22.608-.369 32.017-2.703 3.367 12.261 11.85 35.895 30.751 55.742 1.474 1.548 3.451 2.328 5.432 2.328 1.858 0 3.72-.687 5.171-2.069 2.998-2.857 3.114-7.604.258-10.604zm-73.407-57.705c.155-32.885-1.87-59.733-2.842-70.638 18.447-8.342 36.04-6.439 48.828 5.465 12.19 11.349 16.451 28.755 10.363 42.331-7.185 16.022-27.541 24.197-56.349 22.842z" fill="#fff"></path>
                                                </g>
                                            </g>
                                            <path d="m201.563 185.603c-.739-3.46-3.796-5.933-7.334-5.933s-6.595 2.473-7.334 5.933c-16.243 76.021-49.518 141.795-49.852 142.451-1.881 3.69-.416 8.207 3.273 10.088 1.092.557 2.255.821 3.402.82 2.729 0 5.36-1.495 6.686-4.092.722-1.415 9.867-19.477 20.843-47.337 5.169.432 13.38.943 23.282.943 6.893 0 14.607-.248 22.681-.943 10.976 27.86 20.121 45.923 20.843 47.338 1.883 3.689 6.399 5.153 10.088 3.272 3.689-1.882 5.155-6.398 3.274-10.088-.334-.655-33.609-66.43-49.852-142.452zm-24.732 87.288c5.907-16.021 12.012-34.367 17.398-54.086 5.388 19.728 11.497 38.082 17.407 54.109-13.969.928-26.609.503-34.805-.023z" fill="#fff"></path>
                                        </svg>
                                    </span>
                                    <pre>

</pre>
                                    <a class="btn btn-outline-dark" asp-controller="home" asp-action="yapilar" role="button">
                                        AR
                                    </a>
                                    İLE KEŞFEDİN
                                </div>
                            </div>
                            <div class="u-container-style u-hidden-sm u-hidden-xs u-layout-cell u-size-20 u-layout-cell-4">
                                <div class="u-container-layout u-container-layout-4"></div>
                            </div>
                        </div>
                    </div>
                    <div class="u-size-15 u-size-30-md">
                        <div class="u-layout-col">
                            <div class="u-container-style u-hidden-sm u-hidden-xs u-layout-cell u-size-20 u-layout-cell-5">
                                <div class="u-container-layout u-container-layout-5"></div>
                            </div>
                            <div class="u-align-center u-container-style u-layout-cell u-palette-3-light-3 u-size-40 u-layout-cell-6">
                                <div class="u-container-layout u-container-layout-6">
                                    <span class="u-icon u-icon-circle u-palette-5-light-2 u-spacing-18 u-icon-3">
                                        <svg class="u-svg-link" preserveAspectRatio="xMidYMin slice" viewBox="0 0 512 512" style=""><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#svg-1bf3"></use></svg><svg class="u-svg-content" viewBox="0 0 512 512" id="svg-1bf3">
                                            <path d="m481.492 439.105-15.961-15.94-32.793 32.747c-1.348 1.345-3.147 2.087-5.066 2.087s-3.719-.742-5.068-2.087l-39.35-39.298c-.563-.561-1.287-.897-2.053-1.002v42c.766.104 1.49.441 2.053 1.002l39.35 39.298c1.35 1.345 3.149 2.087 5.068 2.087s3.719-.742 5.066-2.087l48.754-48.688c2.795-2.789 2.795-7.328 0-10.119z" fill="#a64b30"></path>
                                            <path d="m110.127 243.519h-61.715c-11 0-20 9-20 20v6.086c0 11 9 20 20 20h61.715z" fill="#bb5d4c"></path>
                                            <path d="m60 269.604v-6.086c0-11 9-20 20-20h-31.588c-11 0-20 9-20 20v6.086c0 11 9 20 20 20h31.588c-11 0-20-9-20-20z" fill="#a64b30"></path>
                                            <path d="m110.127 289.604h-41.078c-11 0-20 9-20 20v6.087c0 11 9 20 20 20h41.078z" fill="#bb5d4c"></path>
                                            <path d="m80.332 315.691v-6.087c0-11 9-20 20-20h-31.283c-11 0-20 9-20 20v6.087c0 11 9 20 20 20h31.283c-11 0-20-9-20-20z" fill="#a64b30"></path>
                                            <path d="m118.705 355.691v6.087c0 6.759-3.406 12.753-8.578 16.378v4.133c8.893 2.025 15.586 10.006 15.586 19.489v6.086c0 9.483-6.693 17.464-15.586 19.489v56.445c0 11.385 9.291 20.701 20.643 20.701h229.787c11.355 0 20.645-9.316 20.645-20.701v-26.185-104.081h-262.622c.078.71.125 1.429.125 2.159z" fill="#8c9ba7"></path>
                                            <path d="m481.492 439.105-38.691-38.639c-.869-.866-1.23-2.118-.963-3.314 3.979-17.709 1.713-36.421-6.383-52.688-4.906-9.86-10.117-18.513-18.455-25.497l-38.475-66.565c-.898-1.657-2.611-2.62-4.398-2.62-.617 0-1.244.115-1.848.355-6.113 2.434-17.041 8.17-21.541 19.236-4.205 10.347-1.893 22.929 6.881 37.405l23.582 38.722v112.113c.766.104 1.49.441 2.053 1.002l39.35 39.298c1.35 1.345 3.149 2.087 5.068 2.087s3.719-.742 5.066-2.087l48.754-48.688c2.795-2.79 2.795-7.329 0-10.12z" fill="#bb5d4c"></path>
                                            <path d="m141.926 483.799v-130.267h-23.346c.078.71.125 1.429.125 2.159v6.087c0 6.759-3.406 12.753-8.578 16.378v4.133c8.893 2.025 15.586 10.006 15.586 19.489v6.086c0 9.483-6.693 17.464-15.586 19.489v56.445c0 11.385 9.291 20.701 20.643 20.701h31.799c-11.352.001-20.643-9.315-20.643-20.7z" fill="#798b97"></path>
                                            <path d="m372.279 250.137c.604-.24 1.23-.355 1.848-.355 1.787 0 3.5.963 4.398 2.62l2.676 4.757v-228.96c0-11.382-9.289-20.699-20.645-20.699h-229.786c-11.352 0-20.643 9.317-20.643 20.699v311.114c4.613 3.233 7.818 8.352 8.455 14.219h262.619v-8.032l-23.582-38.722c-8.773-14.477-11.086-27.059-6.881-37.405 4.5-11.066 15.428-16.803 21.541-19.236z" fill="#c7eefd"></path>
                                            <path d="m220.693 328.59h-53.566c-13.73 0-24.967 11.219-24.998 24.942h103.533c-13.742 0-24.891-11.154-24.969-24.942z" fill="#98e5fb"></path>
                                            <path d="m324.201 328.59h-53.568c-.078 13.788-11.227 24.942-24.971 24.942h103.537c-.031-13.723-11.267-24.942-24.998-24.942z" fill="#98e5fb"></path>
                                            <path d="m136.664 310.5c-4.143 0-7.5-3.357-7.5-7.5v-28c0-4.143 3.357-7.5 7.5-7.5 2.051 0 3.908.824 5.262 2.158v-27.57c-3.941-3.889-6.381-9.254-6.381-15.172v-16.919c0-5.917 2.439-11.282 6.381-15.17v-74.485c-1.354 1.334-3.211 2.158-5.262 2.158-4.143 0-7.5-3.357-7.5-7.5v-28c0-4.143 3.357-7.5 7.5-7.5h5.262v-51.301c0-5.006 1.799-9.609 4.777-13.199h-15.933c-7.246 0-13.143 5.921-13.143 13.199v307.565c2.988 2.84 5.342 6.342 6.822 10.268h11.078c1.15-4.805 3.375-9.196 6.398-12.913v-22.619z" fill="#98e5fb"></path>
                                            <circle cx="245.663" cy="429.59" fill="#c7eefd" r="31.747"></circle>
                                            <path d="m239 429.59c0-13.078 7.91-24.306 19.205-29.169-3.848-1.657-8.086-2.578-12.541-2.578-17.535 0-31.748 14.214-31.748 31.747 0 17.532 14.213 31.747 31.748 31.747 4.455 0 8.693-.922 12.541-2.578-11.295-4.864-19.205-16.092-19.205-29.169z" fill="#98e5fb"></path>
                                            <path d="m77.037 381.778c-11 0-20-9-20-20v-6.087c0-11 9-20 20-20h21.668c11 0 20 9 20 20v6.087c0 11-9 20-20 20z" fill="#bb5d4c"></path>
                                            <path d="m84.518 361.778v-6.087c0-10.012 7.465-18.344 17.098-19.764-.951-.146-1.92-.236-2.91-.236h-21.669c-11 0-20 9-20 20v6.087c0 11 9 20 20 20h21.668c.99 0 1.959-.089 2.91-.237-9.633-1.42-17.097-9.75-17.097-19.763z" fill="#a64b30"></path>
                                            <path d="m84.047 427.864c-11 0-20-9-20-20v-6.086c0-11 9-20 20-20h21.666c11 0 20 9 20 20v6.086c0 11-9 20-20 20z" fill="#bb5d4c"></path>
                                            <path d="m92 407.864v-6.086c0-9.928 7.338-18.202 16.854-19.726-1.023-.171-2.068-.274-3.141-.274h-21.666c-11 0-20 9-20 20v6.086c0 11 9 20 20 20h21.666c1.072 0 2.117-.104 3.141-.274-9.516-1.524-16.854-9.798-16.854-19.726z" fill="#a64b30"></path>
                                            <path d="m245.664 91c-42.934 0-77.738 15.773-77.738 58.049v41.3c0-42.277 34.805-58.05 77.738-58.05 42.932 0 77.734 15.773 77.734 58.05v-41.3c0-42.276-34.802-58.049-77.734-58.049z" fill="#fda613"></path>
                                            <path d="m199.508 140.675c3.779-31.2 29.004-45.638 61.693-48.926-5.021-.505-10.215-.749-15.537-.749-42.934 0-77.738 15.773-77.738 58.049v41.3c0-25.257 12.428-41.048 31.582-49.674z" fill="#fa8701"></path>
                                            <path d="m254.721 303.272h-18.113c-5.482 0-10.807-.653-15.918-1.854v27.026c0 13.855 11.182 25.088 24.973 25.088 13.793 0 24.975-11.232 24.975-25.088v-27.026c-5.111 1.2-10.435 1.854-15.917 1.854z" fill="#bb5d4c"></path>
                                            <path d="m246.051 328.444v-25.173h-9.443c-5.482 0-10.807-.653-15.918-1.854v27.026c0 13.855 11.182 25.088 24.973 25.088 4.631 0 8.965-1.271 12.682-3.478-7.357-4.363-12.294-12.405-12.294-21.609z" fill="#a64b30"></path>
                                            <g fill="#bb5d4c">
                                                <path d="m167.926 235.377v-39.355h-10.594c-7.889 0-14.287 6.257-14.287 13.976v16.919c0 7.72 6.398 13.979 14.287 13.979h10.84c-.149-1.824-.246-3.66-.246-5.519z"></path>
                                                <path d="m333.996 196.021h-10.598v39.355c0 1.859-.096 3.695-.244 5.518h10.842c7.889 0 14.287-6.259 14.287-13.979v-16.919c0-7.718-6.398-13.975-14.287-13.975z"></path>
                                                <path d="m245.664 132.299c-42.934 0-77.738 15.773-77.738 58.05v45.028c0 37.494 30.752 67.895 68.682 67.895h18.113c37.93 0 68.678-30.4 68.678-67.895v-45.028c-.001-42.278-34.803-58.05-77.735-58.05z"></path>
                                            </g>
                                            <path d="m199 235.377v-20.249c-1.52-1.372-2.479-3.351-2.479-5.559v-15.629c0-2.23.979-4.228 2.523-5.602.959-35.623 27.32-51.786 62.156-55.29-5.022-.505-10.215-.749-15.537-.749-42.934 0-77.738 15.773-77.738 58.05v45.028c0 37.494 30.752 67.895 68.682 67.895h18.113c2.188 0 4.346-.112 6.48-.31-34.889-3.23-62.2-32.252-62.2-67.585z" fill="#a64b30"></path>
                                            <path d="m338.705 442.59c0 1.65-1.35 3-3 3h-26c-1.65 0-3-1.35-3-3v-26c0-1.65 1.35-3 3-3h26c1.65 0 3 1.35 3 3z" fill="#c7eefd"></path>
                                            <path d="m184.705 442.59c0 1.65-1.35 3-3 3h-26c-1.65 0-3-1.35-3-3v-26c0-1.65 1.35-3 3-3h26c1.65 0 3 1.35 3 3z" fill="#c7eefd"></path>
                                            <path d="m243.414 229.529h9.391c4.143 0 7.5-3.357 7.5-7.5s-3.357-7.5-7.5-7.5h-6.27v-14.665c0-4.143-3.357-7.5-7.5-7.5s-7.5 3.357-7.5 7.5v17.844c0 6.519 5.328 11.821 11.879 11.821z"></path>
                                            <path d="m204.021 186.439c-4.143 0-7.5 3.357-7.5 7.5v15.629c0 4.143 3.357 7.5 7.5 7.5s7.5-3.357 7.5-7.5v-15.629c0-4.142-3.357-7.5-7.5-7.5z"></path>
                                            <path d="m287.307 217.068c4.143 0 7.5-3.357 7.5-7.5v-15.629c0-4.143-3.357-7.5-7.5-7.5s-7.5 3.357-7.5 7.5v15.629c0 4.143 3.357 7.5 7.5 7.5z"></path>
                                            <path d="m269.885 260.003c2.93-2.93 2.93-7.678 0-10.607-2.93-2.928-7.678-2.928-10.607 0-3.602 3.603-8.406 5.585-13.535 5.585-.014 0-.029 0-.045 0-5.156-.012-10.004-2.025-13.648-5.67-2.93-2.928-7.678-2.928-10.607 0-2.928 2.93-2.928 7.678 0 10.607 6.705 6.705 15.508 10.059 24.301 10.059 8.748 0 17.49-3.324 24.141-9.974z"></path>
                                            <path d="m144.164 115v-20.5h20.5c4.143 0 7.5-3.357 7.5-7.5s-3.357-7.5-7.5-7.5h-28c-4.143 0-7.5 3.357-7.5 7.5v28c0 4.143 3.357 7.5 7.5 7.5s7.5-3.357 7.5-7.5z"></path>
                                            <path d="m354.664 122.5c4.143 0 7.5-3.357 7.5-7.5v-28c0-4.143-3.357-7.5-7.5-7.5h-28c-4.143 0-7.5 3.357-7.5 7.5s3.357 7.5 7.5 7.5h20.5v20.5c0 4.143 3.358 7.5 7.5 7.5z"></path>
                                            <path d="m136.664 267.5c-4.143 0-7.5 3.357-7.5 7.5v28c0 4.143 3.357 7.5 7.5 7.5h28c4.143 0 7.5-3.357 7.5-7.5s-3.357-7.5-7.5-7.5h-20.5v-20.5c0-4.143-3.357-7.5-7.5-7.5z"></path>
                                            <circle cx="153" cy="32.5" r="7.5"></circle>
                                            <circle cx="176.5" cy="32.5" r="7.5"></circle>
                                            <path d="m211 25c-4.143 0-7.5 3.357-7.5 7.5s3.357 7.5 7.5 7.5h72c4.143 0 7.5-3.357 7.5-7.5s-3.357-7.5-7.5-7.5z"></path>
                                            <path d="m245.664 468.837c21.641 0 39.246-17.606 39.246-39.247s-17.605-39.247-39.246-39.247c-21.643 0-39.248 17.606-39.248 39.247 0 21.64 17.605 39.247 39.248 39.247zm0-63.494c13.369 0 24.246 10.877 24.246 24.247s-10.877 24.247-24.246 24.247c-13.371 0-24.248-10.877-24.248-24.247s10.877-24.247 24.248-24.247z"></path>
                                            <path d="m335.705 453.09c5.789 0 10.5-4.71 10.5-10.5v-26c0-5.79-4.711-10.5-10.5-10.5h-26c-5.791 0-10.5 4.71-10.5 10.5v26c0 5.79 4.709 10.5 10.5 10.5zm-21.5-32h17v17h-17z"></path>
                                            <path d="m181.705 406.09h-26c-5.791 0-10.5 4.71-10.5 10.5v26c0 5.79 4.709 10.5 10.5 10.5h26c5.789 0 10.5-4.71 10.5-10.5v-26c0-5.79-4.711-10.5-10.5-10.5zm-4.5 32h-17v-17h17z"></path>
                                            <path d="m486.793 433.799-37.188-37.135c1.801-9.07 2.131-18.343.979-27.596-.512-4.111-4.268-7.025-8.369-6.516-4.109.512-7.027 4.259-6.516 8.369 1.029 8.259.631 16.53-1.182 24.594-.834 3.728.283 7.564 2.982 10.258l38.445 38.392-48.273 48.209-38.971-38.918v-107.956c0-1.376-.379-2.726-1.096-3.901l-23.572-38.707c-7.477-12.336-9.611-22.663-6.346-30.694 3.029-7.453 10.264-11.915 15.369-14.241 0 0 37.861 66.436 38.109 66.745 0 0 9.916 10.354 13.744 16.34 2.232 3.491 6.873 4.507 10.359 2.277 3.49-2.232 4.51-6.87 2.277-10.359-3.971-6.208-8.756-11.906-14.172-16.919l-34.671-61.041v-85.003c0-4.143-3.357-7.5-7.5-7.5s-7.5 3.357-7.5 7.5v72.304c-1.438.049-2.848.332-4.195.868-7.223 2.875-20.168 9.735-25.715 23.38-3.525 8.671-3.463 18.364.158 28.951h-17.285c-4.143 0-7.5 3.357-7.5 7.5s3.357 7.5 7.5 7.5h24.445c.035.06.068.119.103.18l21.531 35.353h-16.943c-3.422-14.282-16.297-24.942-31.6-24.942h-46.065v-13.979c26.525-8.502 46.711-31.034 51.602-58.717h4.258c12.014 0 21.787-9.635 21.787-21.479v-16.919c0-11.842-9.773-21.476-21.787-21.476h-3.098v-39.473c0-41.657-31.066-65.549-85.234-65.549-54.17 0-85.238 23.892-85.238 65.549v39.473h-3.094c-12.014 0-21.787 9.634-21.787 21.476v16.919c0 11.844 9.773 21.479 21.787 21.479h4.254c4.893 27.682 25.078 50.215 51.604 58.717v13.979h-46.063c-15.303 0-28.18 10.66-31.6 24.942h-11.078c-1.48-3.926-3.834-7.428-6.822-10.268v-307.566c0-7.278 5.896-13.199 13.143-13.199h229.787c7.248 0 13.145 5.921 13.145 13.199v105.804c0 4.143 3.357 7.5 7.5 7.5s7.5-3.357 7.5-7.5v-105.804c0-15.549-12.625-28.199-28.144-28.199h-229.787c-15.518 0-28.143 12.65-28.143 28.199v207.819h-54.215c-15.164 0-27.5 12.337-27.5 27.5v6.086c0 13.903 10.373 25.423 23.787 27.242-2.008 3.815-3.15 8.155-3.15 12.758v6.087c0 10.021 5.389 18.804 13.42 23.61-3.41 4.581-5.432 10.253-5.432 16.39v6.087c0 9.743 5.098 18.313 12.762 23.199-3.602 4.65-5.752 10.478-5.752 16.801v6.086c0 15.163 12.336 27.5 27.5 27.5h18.58v48.435c0 15.55 12.625 28.201 28.143 28.201h46.23c4.143 0 7.5-3.357 7.5-7.5s-3.357-7.5-7.5-7.5h-46.23c-7.246 0-13.143-5.922-13.143-13.201v-51.151c9.215-4.447 15.586-13.886 15.586-24.783v-6.086c0-9.743-5.098-18.311-12.76-23.198 3.6-4.65 5.752-10.479 5.752-16.802v-.746h247.496v122.767c0 7.279-5.897 13.201-13.145 13.201h-147.556c-4.143 0-7.5 3.357-7.5 7.5s3.357 7.5 7.5 7.5h147.557c15.52 0 28.145-12.651 28.145-28.201v-9.145l28.609 28.571c2.766 2.757 6.445 4.274 10.361 4.274 3.918 0 7.598-1.519 10.367-4.28l48.754-48.688c2.77-2.766 4.295-6.447 4.295-10.366 0-3.92-1.525-7.601-4.295-10.367zm-155.895-230.278h3.098c3.742 0 6.787 2.905 6.787 6.476v16.919c0 3.572-3.045 6.479-6.787 6.479h-3.098zm-170.472 29.874h-3.094c-3.742 0-6.787-2.906-6.787-6.479v-16.919c0-3.57 3.045-6.476 6.787-6.476h3.094zm-112.014 48.709c-6.893 0-12.5-5.607-12.5-12.5v-6.086c0-6.893 5.607-12.5 12.5-12.5h54.215v31.086zm8.137 33.587v-6.087c0-6.893 5.607-12.5 12.5-12.5h33.578v31.087h-33.578c-6.893 0-12.5-5.607-12.5-12.5zm7.988 46.087v-6.087c0-6.893 5.607-12.5 12.5-12.5h21.668c6.893 0 12.5 5.607 12.5 12.5v6.087c0 6.893-5.607 12.5-12.5 12.5h-21.668c-6.892 0-12.5-5.607-12.5-12.5zm53.676 46.086c0 6.893-5.607 12.5-12.5 12.5h-21.666c-6.893 0-12.5-5.607-12.5-12.5v-6.086c0-6.893 5.607-12.5 12.5-12.5h21.666c6.893 0 12.5 5.607 12.5 12.5zm76.596-297.422c11.91-7.813 29.496-11.942 50.855-11.942s38.943 4.13 50.854 11.942c12.941 8.489 19.277 20.997 19.373 38.216-14.217-15.475-38.164-23.859-70.227-23.859s-56.012 8.385-70.229 23.859c.096-17.218 6.43-29.726 19.374-38.216zm-19.383 124.935v-45.028c0-17.424 6.34-30.053 19.383-38.607 11.91-7.813 29.496-11.942 50.855-11.942s38.943 4.13 50.854 11.942c13.041 8.555 19.381 21.184 19.381 38.607v45.028c0 33.302-27.443 60.395-61.178 60.395h-18.113c-33.737 0-61.182-27.093-61.182-60.395zm-24.055 110.655c2.83-5.87 8.822-9.942 15.756-9.942h46.973c.863 3.583 2.326 6.929 4.262 9.942zm111.766-17.588c0 9.698-7.838 17.588-17.475 17.588-9.635 0-17.473-7.89-17.473-17.588v-18.143c2.766.303 5.572.471 8.418.471h18.113c2.846 0 5.65-.168 8.416-.471v18.143zm9.828 17.588c1.936-3.014 3.4-6.359 4.262-9.942h46.975c6.934 0 12.926 4.072 15.756 9.942z"></path>
                                        </svg>
                                    </span>
                                    <pre>

</pre>
                                    <a class="btn btn-outline-info" asp-controller="home" asp-action="istanbul" role="button">
                                        İstanBUL
                                    </a>
                                    İLE ANILARINIZI PAYLAŞIN
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="u-size-15 u-size-30-md">
                        <div class="u-layout-col">
                            <div class="u-align-center u-container-style u-layout-cell u-palette-3-light-3 u-size-40 u-layout-cell-7">
                                <div class="u-container-layout u-container-layout-7">
                                    <span class="u-icon u-icon-circle u-palette-5-light-2 u-spacing-18 u-icon-4">
                                        <svg class="u-svg-link" preserveAspectRatio="xMidYMin slice" viewBox="0 0 512 512" style=""><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#svg-a6b3"></use></svg><svg class="u-svg-content" viewBox="0 0 512 512" id="svg-a6b3">
                                            <g>
                                                <path d="m157 0c-30.376 0-55 24.624-55 55v135c0 8.284 6.716 15 15 15h50v22.5c0 20.711 16.789 37.5 37.5 37.5s37.5-16.789 37.5-37.5v-22.5h65l20-65v-75l-20-65z" fill="#00ec89"></path>
                                                <path d="m457 0h-150v65h-22.5c-20.711 0-37.5 16.789-37.5 37.5 0 20.711 16.789 37.5 37.5 37.5h22.5v65l65 20h75l65-20v-150c0-30.376-24.624-55-55-55z" fill="#ffb454"></path>
                                                <path d="m55 512h135c8.284 0 15-6.716 15-15v-50h22.5c20.711 0 37.5-16.789 37.5-37.5 0-20.711-16.789-37.5-37.5-37.5h-22.5v-50c0-8.284-6.716-15-15-15h-35c-8.284 0-15 6.716-15 15v7.5c0 20.711-16.789 37.5-37.5 37.5-20.711 0-37.5-16.789-37.5-37.5v-7.5c0-8.284-6.716-15-15-15h-35c-8.284 0-15 6.716-15 15v135c0 30.376 24.624 55 55 55z" fill="#ff6378"></path>
                                                <path d="m372 182.5v22.5h-65v50c0 8.284 6.716 15 15 15h7.5c20.711 0 37.5 16.789 37.5 37.5 0 20.711-16.789 37.5-37.5 37.5h-7.5c-8.284 0-15 6.716-15 15v35c0 8.284 6.716 15 15 15h135c30.376 0 55-24.624 55-55v-150h-65v-22.5c0-20.711-16.789-37.5-37.5-37.5-20.711 0-37.5 16.789-37.5 37.5z" fill="#2ebeef"></path>
                                            </g>
                                        </svg>
                                    </span>
                                    <pre>

</pre>
                                    <a class="btn btn-outline-primary" asp-controller="home" asp-action="unity" role="button">
                                        OYUN
                                    </a>
                                    İLE EĞLENİN
                                </div>
                            </div>
                            <div class="u-container-style u-hidden-sm u-hidden-xs u-layout-cell u-size-20 u-layout-cell-8">
                                <div class="u-container-layout u-container-layout-8"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <footer class="u-clearfix u-footer u-palette-5-light-3" id="sec-2ab6">
        <section class="u-backlink u-clearfix u-grey-80">
            <a class="u-link" asp-action="index" target="_blank">
                <span>Yedi</span>
            </a>
            <p class="u-text">
                <span>Takımı Tarafından Oluşturulmuştur</span>
            </p>
        </section>
    </footer>
</body>
</html>





@*
    <!DOCTYPE html>
    @{
        ViewData["Title"] = "Index";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    <html lang="en">
    <head>
        <style>
            body {
                background-image: url('istanbul.jpg');
            }
        </style>

        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no">
        <title>Yedi</title>
        <link rel="stylesheet" href="~/assets/bootstrap/css/bootstrap.min.css">
        <link rel="stylesheet" href="~/assets/fonts/font-awesome.min.css">
        <link rel="stylesheet" href="~/assets/css/styles.min.css">
    </head>

    <body>
        <canvas id="sakura"></canvas>
        <div class="btnbg">
            <div class="bg-transparent">
                <!-- Small boxes (Stat box) -->
                <pre>



    </pre>    <div class="content-wrapper bg-transparent">
                    <div class="row">
                        <div class="col-lg-3 col-6">
                            <!-- small box -->
                            <div class="small-box bg-transparent">
                                <div class="inner">
                                    <h3> 15 <sup style="text-decoration-color: azure;font-size: 20px; color: azure;"></sup></h3>

                                    <p style="text-decoration-color:azure ">Aktif Kullanıcı</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div>
                            <!-- small box -->
                            <div class="bg-transparent">
                                <div class="inner">

                                    <h3>.   7 Tepe İstanbul'a Hoşgeldiniz<sup style="font-size: 20px"></sup></h3>

                                    <pre style="text-decoration-color:azure;outline-color:aqua ; font-style:italic;">
                        Sana dün bir tepeden baktım aziz İstanbul!
                        Görmedim gezmediğim, sevmediğim hiçbir yer.
                        Ömrüm oldukça, gönül tahtıma keyfince kurul!
                        Sade bir semtini sevmek bile bir ömre değer.

                        Nice revnaklı şehirler görülür dünyada,
                        Lakin efsunlu güzellikleri sensin yaratan.
                        Yaşamıştır derim, en hoş ve uzun rü’yada
                        Sende çok yıl yaşayan, sende ölen, sende yatan.
    </pre>
                                </div>
                            </div>

                        </div><div>
                            <!-- small box -->
                            <div class="bg-transparent">
                                <div class="inner">

                                    <h3><sup style="font-size: 20px">.</sup></h3>

                                    <pre style="text-decoration-color:azure;outline-color:aqua ; font-style:italic;">

    </pre>
                                </div>
                            </div>

                        </div>
                    </div>

                </div>
            </div>
        </div>
        <embed src="~/video/raft2.mp3" type="audio/mpeg" width="180" height="90" loop="false" autostart="true" hidden="hidden" />
    </body>
    </html>
    <!-- sakura shader -->
    <style>
        body {
            padding: 0;
            margin: 0;
            overflow: hidden;
            height: 600px;
        }

        canvas {
            padding: 0;
            margin: 0;
        }

        div.btnbg {
            position: fixed;
            left: 0;
            top: 0;
        }
    </style>
    <script>
        // Utilities
        var Vector3 = {};
        var Matrix44 = {};
        Vector3.create = function (x, y, z) {
            return { 'x': x, 'y': y, 'z': z };
        };
        Vector3.dot = function (v0, v1) {
            return v0.x * v1.x + v0.y * v1.y + v0.z * v1.z;
        };
        Vector3.cross = function (v, v0, v1) {
            v.x = v0.y * v1.z - v0.z * v1.y;
            v.y = v0.z * v1.x - v0.x * v1.z;
            v.z = v0.x * v1.y - v0.y * v1.x;
        };
        Vector3.normalize = function (v) {
            var l = v.x * v.x + v.y * v.y + v.z * v.z;
            if (l > 0.00001) {
                l = 1.0 / Math.sqrt(l);
                v.x *= l;
                v.y *= l;
                v.z *= l;
            }
        };
        Vector3.arrayForm = function (v) {
            if (v.array) {
                v.array[0] = v.x;
                v.array[1] = v.y;
                v.array[2] = v.z;
            }
            else {
                v.array = new Float32Array([v.x, v.y, v.z]);
            }
            return v.array;
        };
        Matrix44.createIdentity = function () {
            return new Float32Array([1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]);
        };
        Matrix44.loadProjection = function (m, aspect, vdeg, near, far) {
            var h = near * Math.tan(vdeg * Math.PI / 180.0 * 0.5) * 2.0;
            var w = h * aspect;

            m[0] = 2.0 * near / w;
            m[1] = 0.0;
            m[2] = 0.0;
            m[3] = 0.0;

            m[4] = 0.0;
            m[5] = 2.0 * near / h;
            m[6] = 0.0;
            m[7] = 0.0;

            m[8] = 0.0;
            m[9] = 0.0;
            m[10] = -(far + near) / (far - near);
            m[11] = -1.0;

            m[12] = 0.0;
            m[13] = 0.0;
            m[14] = -2.0 * far * near / (far - near);
            m[15] = 0.0;
        };
        Matrix44.loadLookAt = function (m, vpos, vlook, vup) {
            var frontv = Vector3.create(vpos.x - vlook.x, vpos.y - vlook.y, vpos.z - vlook.z);
            Vector3.normalize(frontv);
            var sidev = Vector3.create(1.0, 0.0, 0.0);
            Vector3.cross(sidev, vup, frontv);
            Vector3.normalize(sidev);
            var topv = Vector3.create(1.0, 0.0, 0.0);
            Vector3.cross(topv, frontv, sidev);
            Vector3.normalize(topv);

            m[0] = sidev.x;
            m[1] = topv.x;
            m[2] = frontv.x;
            m[3] = 0.0;

            m[4] = sidev.y;
            m[5] = topv.y;
            m[6] = frontv.y;
            m[7] = 0.0;

            m[8] = sidev.z;
            m[9] = topv.z;
            m[10] = frontv.z;
            m[11] = 0.0;

            m[12] = -(vpos.x * m[0] + vpos.y * m[4] + vpos.z * m[8]);
            m[13] = -(vpos.x * m[1] + vpos.y * m[5] + vpos.z * m[9]);
            m[14] = -(vpos.x * m[2] + vpos.y * m[6] + vpos.z * m[10]);
            m[15] = 1.0;
        };

        //
        var timeInfo = {
            'start': 0, 'prev': 0, // Date
            'delta': 0, 'elapsed': 0 // Number(sec)
        };

        //
        var gl;
        var renderSpec = {
            'width': 0,
            'height': 0,
            'aspect': 1,
            'array': new Float32Array(3),
            'halfWidth': 0,
            'halfHeight': 0,
            'halfArray': new Float32Array(3)
            // and some render targets. see setViewport()
        };
        renderSpec.setSize = function (w, h) {
            renderSpec.width = w;
            renderSpec.height = h;
            renderSpec.aspect = renderSpec.width / renderSpec.height;
            renderSpec.array[0] = renderSpec.width;
            renderSpec.array[1] = renderSpec.height;
            renderSpec.array[2] = renderSpec.aspect;

            renderSpec.halfWidth = Math.floor(w / 2);
            renderSpec.halfHeight = Math.floor(h / 2);
            renderSpec.halfArray[0] = renderSpec.halfWidth;
            renderSpec.halfArray[1] = renderSpec.halfHeight;
            renderSpec.halfArray[2] = renderSpec.halfWidth / renderSpec.halfHeight;
        };

        function deleteRenderTarget(rt) {
            gl.deleteFramebuffer(rt.frameBuffer);
            gl.deleteRenderbuffer(rt.renderBuffer);
            gl.deleteTexture(rt.texture);
        }

        function createRenderTarget(w, h) {
            var ret = {
                'width': w,
                'height': h,
                'sizeArray': new Float32Array([w, h, w / h]),
                'dtxArray': new Float32Array([1.0 / w, 1.0 / h])
            };
            ret.frameBuffer = gl.createFramebuffer();
            ret.renderBuffer = gl.createRenderbuffer();
            ret.texture = gl.createTexture();

            gl.bindTexture(gl.TEXTURE_2D, ret.texture);
            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, w, h, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);
            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);
            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);

            gl.bindFramebuffer(gl.FRAMEBUFFER, ret.frameBuffer);
            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, ret.texture, 0);

            gl.bindRenderbuffer(gl.RENDERBUFFER, ret.renderBuffer);
            gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, w, h);
            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, ret.renderBuffer);

            gl.bindTexture(gl.TEXTURE_2D, null);
            gl.bindRenderbuffer(gl.RENDERBUFFER, null);
            gl.bindFramebuffer(gl.FRAMEBUFFER, null);

            return ret;
        }

        function compileShader(shtype, shsrc) {
            var retsh = gl.createShader(shtype);

            gl.shaderSource(retsh, shsrc);
            gl.compileShader(retsh);

            if (!gl.getShaderParameter(retsh, gl.COMPILE_STATUS)) {
                var errlog = gl.getShaderInfoLog(retsh);
                gl.deleteShader(retsh);
                console.error(errlog);
                return null;
            }
            return retsh;
        }

        function createShader(vtxsrc, frgsrc, uniformlist, attrlist) {
            var vsh = compileShader(gl.VERTEX_SHADER, vtxsrc);
            var fsh = compileShader(gl.FRAGMENT_SHADER, frgsrc);

            if (vsh == null || fsh == null) {
                return null;
            }

            var prog = gl.createProgram();
            gl.attachShader(prog, vsh);
            gl.attachShader(prog, fsh);

            gl.deleteShader(vsh);
            gl.deleteShader(fsh);

            gl.linkProgram(prog);
            if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {
                var errlog = gl.getProgramInfoLog(prog);
                console.error(errlog);
                return null;
            }

            if (uniformlist) {
                prog.uniforms = {};
                for (var i = 0; i < uniformlist.length; i++) {
                    prog.uniforms[uniformlist[i]] = gl.getUniformLocation(prog, uniformlist[i]);
                }
            }

            if (attrlist) {
                prog.attributes = {};
                for (var i = 0; i < attrlist.length; i++) {
                    var attr = attrlist[i];
                    prog.attributes[attr] = gl.getAttribLocation(prog, attr);
                }
            }

            return prog;
        }

        function useShader(prog) {
            gl.useProgram(prog);
            for (var attr in prog.attributes) {
                gl.enableVertexAttribArray(prog.attributes[attr]);;
            }
        }

        function unuseShader(prog) {
            for (var attr in prog.attributes) {
                gl.disableVertexAttribArray(prog.attributes[attr]);;
            }
            gl.useProgram(null);
        }

        /////
        var projection = {
            'angle': 60,
            'nearfar': new Float32Array([0.1, 100.0]),
            'matrix': Matrix44.createIdentity()
        };
        var camera = {
            'position': Vector3.create(0, 0, 100),
            'lookat': Vector3.create(0, 0, 0),
            'up': Vector3.create(0, 1, 0),
            'dof': Vector3.create(10.0, 4.0, 8.0),
            'matrix': Matrix44.createIdentity()
        };

        var pointFlower = {};
        var meshFlower = {};
        var sceneStandBy = false;

        var BlossomParticle = function () {
            this.velocity = new Array(3);
            this.rotation = new Array(3);
            this.position = new Array(3);
            this.euler = new Array(3);
            this.size = 1.0;
            this.alpha = 1.0;
            this.zkey = 0.0;
        };

        BlossomParticle.prototype.setVelocity = function (vx, vy, vz) {
            this.velocity[0] = vx;
            this.velocity[1] = vy;
            this.velocity[2] = vz;
        };

        BlossomParticle.prototype.setRotation = function (rx, ry, rz) {
            this.rotation[0] = rx;
            this.rotation[1] = ry;
            this.rotation[2] = rz;
        };

        BlossomParticle.prototype.setPosition = function (nx, ny, nz) {
            this.position[0] = nx;
            this.position[1] = ny;
            this.position[2] = nz;
        };

        BlossomParticle.prototype.setEulerAngles = function (rx, ry, rz) {
            this.euler[0] = rx;
            this.euler[1] = ry;
            this.euler[2] = rz;
        };

        BlossomParticle.prototype.setSize = function (s) {
            this.size = s;
        };

        BlossomParticle.prototype.update = function (dt, et) {
            this.position[0] += this.velocity[0] * dt;
            this.position[1] += this.velocity[1] * dt;
            this.position[2] += this.velocity[2] * dt;

            this.euler[0] += this.rotation[0] * dt;
            this.euler[1] += this.rotation[1] * dt;
            this.euler[2] += this.rotation[2] * dt;
        };

        function createPointFlowers() {
            // get point sizes
            var prm = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE);
            renderSpec.pointSize = { 'min': prm[0], 'max': prm[1] };

            var vtxsrc = document.getElementById("sakura_point_vsh").textContent;
            var frgsrc = document.getElementById("sakura_point_fsh").textContent;

            pointFlower.program = createShader(
                vtxsrc, frgsrc,
                ['uProjection', 'uModelview', 'uResolution', 'uOffset', 'uDOF', 'uFade'],
                ['aPosition', 'aEuler', 'aMisc']
            );

            useShader(pointFlower.program);
            pointFlower.offset = new Float32Array([0.0, 0.0, 0.0]);
            pointFlower.fader = Vector3.create(0.0, 10.0, 0.0);

            // paramerters: velocity[3], rotate[3]
            pointFlower.numFlowers = 1600;
            pointFlower.particles = new Array(pointFlower.numFlowers);
            // vertex attributes {position[3], euler_xyz[3], size[1]}
            pointFlower.dataArray = new Float32Array(pointFlower.numFlowers * (3 + 3 + 2));
            pointFlower.positionArrayOffset = 0;
            pointFlower.eulerArrayOffset = pointFlower.numFlowers * 3;
            pointFlower.miscArrayOffset = pointFlower.numFlowers * 6;

            pointFlower.buffer = gl.createBuffer();
            gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);
            gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);
            gl.bindBuffer(gl.ARRAY_BUFFER, null);

            unuseShader(pointFlower.program);

            for (var i = 0; i < pointFlower.numFlowers; i++) {
                pointFlower.particles[i] = new BlossomParticle();
            }
        }

        function initPointFlowers() {
            //area
            pointFlower.area = Vector3.create(20.0, 20.0, 20.0);
            pointFlower.area.x = pointFlower.area.y * renderSpec.aspect;

            pointFlower.fader.x = 10.0; //env fade start
            pointFlower.fader.y = pointFlower.area.z; //env fade half
            pointFlower.fader.z = 0.1;  //near fade start

            //particles
            var PI2 = Math.PI * 2.0;
            var tmpv3 = Vector3.create(0, 0, 0);
            var tmpv = 0;
            var symmetryrand = function () { return (Math.random() * 2.0 - 1.0); };
            for (var i = 0; i < pointFlower.numFlowers; i++) {
                var tmpprtcl = pointFlower.particles[i];

                //velocity
                tmpv3.x = symmetryrand() * 0.3 + 0.8;
                tmpv3.y = symmetryrand() * 0.2 - 1.0;
                tmpv3.z = symmetryrand() * 0.3 + 0.5;
                Vector3.normalize(tmpv3);
                tmpv = 2.0 + Math.random() * 1.0;
                tmpprtcl.setVelocity(tmpv3.x * tmpv, tmpv3.y * tmpv, tmpv3.z * tmpv);

                //rotation
                tmpprtcl.setRotation(
                    symmetryrand() * PI2 * 0.5,
                    symmetryrand() * PI2 * 0.5,
                    symmetryrand() * PI2 * 0.5
                );

                //position
                tmpprtcl.setPosition(
                    symmetryrand() * pointFlower.area.x,
                    symmetryrand() * pointFlower.area.y,
                    symmetryrand() * pointFlower.area.z
                );

                //euler
                tmpprtcl.setEulerAngles(
                    Math.random() * Math.PI * 2.0,
                    Math.random() * Math.PI * 2.0,
                    Math.random() * Math.PI * 2.0
                );

                //size
                tmpprtcl.setSize(0.9 + Math.random() * 0.1);
            }
        }

        function renderPointFlowers() {
            //update
            var PI2 = Math.PI * 2.0;
            var limit = [pointFlower.area.x, pointFlower.area.y, pointFlower.area.z];
            var repeatPos = function (prt, cmp, limit) {
                if (Math.abs(prt.position[cmp]) - prt.size * 0.5 > limit) {
                    //out of area
                    if (prt.position[cmp] > 0) {
                        prt.position[cmp] -= limit * 2.0;
                    }
                    else {
                        prt.position[cmp] += limit * 2.0;
                    }
                }
            };
            var repeatEuler = function (prt, cmp) {
                prt.euler[cmp] = prt.euler[cmp] % PI2;
                if (prt.euler[cmp] < 0.0) {
                    prt.euler[cmp] += PI2;
                }
            };

            for (var i = 0; i < pointFlower.numFlowers; i++) {
                var prtcl = pointFlower.particles[i];
                prtcl.update(timeInfo.delta, timeInfo.elapsed);
                repeatPos(prtcl, 0, pointFlower.area.x);
                repeatPos(prtcl, 1, pointFlower.area.y);
                repeatPos(prtcl, 2, pointFlower.area.z);
                repeatEuler(prtcl, 0);
                repeatEuler(prtcl, 1);
                repeatEuler(prtcl, 2);

                prtcl.alpha = 1.0;//(pointFlower.area.z - prtcl.position[2]) * 0.5;

                prtcl.zkey = (camera.matrix[2] * prtcl.position[0]
                    + camera.matrix[6] * prtcl.position[1]
                    + camera.matrix[10] * prtcl.position[2]
                    + camera.matrix[14]);
            }

            // sort
            pointFlower.particles.sort(function (p0, p1) { return p0.zkey - p1.zkey; });

            // update data
            var ipos = pointFlower.positionArrayOffset;
            var ieuler = pointFlower.eulerArrayOffset;
            var imisc = pointFlower.miscArrayOffset;
            for (var i = 0; i < pointFlower.numFlowers; i++) {
                var prtcl = pointFlower.particles[i];
                pointFlower.dataArray[ipos] = prtcl.position[0];
                pointFlower.dataArray[ipos + 1] = prtcl.position[1];
                pointFlower.dataArray[ipos + 2] = prtcl.position[2];
                ipos += 3;
                pointFlower.dataArray[ieuler] = prtcl.euler[0];
                pointFlower.dataArray[ieuler + 1] = prtcl.euler[1];
                pointFlower.dataArray[ieuler + 2] = prtcl.euler[2];
                ieuler += 3;
                pointFlower.dataArray[imisc] = prtcl.size;
                pointFlower.dataArray[imisc + 1] = prtcl.alpha;
                imisc += 2;
            }

            //draw
            gl.enable(gl.BLEND);
            //gl.disable(gl.DEPTH_TEST);
            gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);

            var prog = pointFlower.program;
            useShader(prog);

            gl.uniformMatrix4fv(prog.uniforms.uProjection, false, projection.matrix);
            gl.uniformMatrix4fv(prog.uniforms.uModelview, false, camera.matrix);
            gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);
            gl.uniform3fv(prog.uniforms.uDOF, Vector3.arrayForm(camera.dof));
            gl.uniform3fv(prog.uniforms.uFade, Vector3.arrayForm(pointFlower.fader));

            gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);
            gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);

            gl.vertexAttribPointer(prog.attributes.aPosition, 3, gl.FLOAT, false, 0, pointFlower.positionArrayOffset * Float32Array.BYTES_PER_ELEMENT);
            gl.vertexAttribPointer(prog.attributes.aEuler, 3, gl.FLOAT, false, 0, pointFlower.eulerArrayOffset * Float32Array.BYTES_PER_ELEMENT);
            gl.vertexAttribPointer(prog.attributes.aMisc, 2, gl.FLOAT, false, 0, pointFlower.miscArrayOffset * Float32Array.BYTES_PER_ELEMENT);

            // doubler
            for (var i = 1; i < 2; i++) {
                var zpos = i * -2.0;
                pointFlower.offset[0] = pointFlower.area.x * -1.0;
                pointFlower.offset[1] = pointFlower.area.y * -1.0;
                pointFlower.offset[2] = pointFlower.area.z * zpos;
                gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);
                gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);

                pointFlower.offset[0] = pointFlower.area.x * -1.0;
                pointFlower.offset[1] = pointFlower.area.y * 1.0;
                pointFlower.offset[2] = pointFlower.area.z * zpos;
                gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);
                gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);

                pointFlower.offset[0] = pointFlower.area.x * 1.0;
                pointFlower.offset[1] = pointFlower.area.y * -1.0;
                pointFlower.offset[2] = pointFlower.area.z * zpos;
                gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);
                gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);

                pointFlower.offset[0] = pointFlower.area.x * 1.0;
                pointFlower.offset[1] = pointFlower.area.y * 1.0;
                pointFlower.offset[2] = pointFlower.area.z * zpos;
                gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);
                gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);
            }

            //main
            pointFlower.offset[0] = 0.0;
            pointFlower.offset[1] = 0.0;
            pointFlower.offset[2] = 0.0;
            gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);
            gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);

            gl.bindBuffer(gl.ARRAY_BUFFER, null);
            unuseShader(prog);

            gl.enable(gl.DEPTH_TEST);
            gl.disable(gl.BLEND);
        }

        // effects
        //common util
        function createEffectProgram(vtxsrc, frgsrc, exunifs, exattrs) {
            var ret = {};
            var unifs = ['uResolution', 'uSrc', 'uDelta'];
            if (exunifs) {
                unifs = unifs.concat(exunifs);
            }
            var attrs = ['aPosition'];
            if (exattrs) {
                attrs = attrs.concat(exattrs);
            }

            ret.program = createShader(vtxsrc, frgsrc, unifs, attrs);
            useShader(ret.program);

            ret.dataArray = new Float32Array([
                -1.0, -1.0,
                1.0, -1.0,
                -1.0, 1.0,
                1.0, 1.0
            ]);
            ret.buffer = gl.createBuffer();
            gl.bindBuffer(gl.ARRAY_BUFFER, ret.buffer);
            gl.bufferData(gl.ARRAY_BUFFER, ret.dataArray, gl.STATIC_DRAW);

            gl.bindBuffer(gl.ARRAY_BUFFER, null);
            unuseShader(ret.program);

            return ret;
        }

        // basic usage
        // useEffect(prog, srctex({'texture':texid, 'dtxArray':(f32)[dtx, dty]})); //basic initialize
        // gl.uniform**(...); //additional uniforms
        // drawEffect()
        // unuseEffect(prog)
        // TEXTURE0 makes src
        function useEffect(fxobj, srctex) {
            var prog = fxobj.program;
            useShader(prog);
            gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);

            if (srctex != null) {
                gl.uniform2fv(prog.uniforms.uDelta, srctex.dtxArray);
                gl.uniform1i(prog.uniforms.uSrc, 0);

                gl.activeTexture(gl.TEXTURE0);
                gl.bindTexture(gl.TEXTURE_2D, srctex.texture);
            }
        }
        function drawEffect(fxobj) {
            gl.bindBuffer(gl.ARRAY_BUFFER, fxobj.buffer);
            gl.vertexAttribPointer(fxobj.program.attributes.aPosition, 2, gl.FLOAT, false, 0, 0);
            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);
        }
        function unuseEffect(fxobj) {
            unuseShader(fxobj.program);
        }

        var effectLib = {};
        function createEffectLib() {

            var vtxsrc, frgsrc;
            //common
            var cmnvtxsrc = document.getElementById("fx_common_vsh").textContent;

            //background
            frgsrc = document.getElementById("bg_fsh").textContent;
            effectLib.sceneBg = createEffectProgram(cmnvtxsrc, frgsrc, ['uTimes'], null);

            // make brightpixels buffer
            frgsrc = document.getElementById("fx_brightbuf_fsh").textContent;
            effectLib.mkBrightBuf = createEffectProgram(cmnvtxsrc, frgsrc, null, null);

            // direction blur
            frgsrc = document.getElementById("fx_dirblur_r4_fsh").textContent;
            effectLib.dirBlur = createEffectProgram(cmnvtxsrc, frgsrc, ['uBlurDir'], null);

            //final composite
            vtxsrc = document.getElementById("pp_final_vsh").textContent;
            frgsrc = document.getElementById("pp_final_fsh").textContent;
            effectLib.finalComp = createEffectProgram(vtxsrc, frgsrc, ['uBloom'], null);
        }

        // background
        function createBackground() {
            //console.log("create background");
        }
        function initBackground() {
            //console.log("init background");
        }
        function renderBackground() {
            gl.disable(gl.DEPTH_TEST);

            useEffect(effectLib.sceneBg, null);
            gl.uniform2f(effectLib.sceneBg.program.uniforms.uTimes, timeInfo.elapsed, timeInfo.delta);
            drawEffect(effectLib.sceneBg);
            unuseEffect(effectLib.sceneBg);

            gl.enable(gl.DEPTH_TEST);
        }

        // post process
        var postProcess = {};
        function createPostProcess() {
            //console.log("create post process");
        }
        function initPostProcess() {
            //console.log("init post process");
        }

        function renderPostProcess() {
            gl.enable(gl.TEXTURE_2D);
            gl.disable(gl.DEPTH_TEST);
            var bindRT = function (rt, isclear) {
                gl.bindFramebuffer(gl.FRAMEBUFFER, rt.frameBuffer);
                gl.viewport(0, 0, rt.width, rt.height);
                if (isclear) {
                    gl.clearColor(0, 0, 0, 0);
                    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);
                }
            };

            //make bright buff
            bindRT(renderSpec.wHalfRT0, true);
            useEffect(effectLib.mkBrightBuf, renderSpec.mainRT);
            drawEffect(effectLib.mkBrightBuf);
            unuseEffect(effectLib.mkBrightBuf);

            // make bloom
            for (var i = 0; i < 2; i++) {
                var p = 1.5 + 1 * i;
                var s = 2.0 + 1 * i;
                bindRT(renderSpec.wHalfRT1, true);
                useEffect(effectLib.dirBlur, renderSpec.wHalfRT0);
                gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, p, 0.0, s, 0.0);
                drawEffect(effectLib.dirBlur);
                unuseEffect(effectLib.dirBlur);

                bindRT(renderSpec.wHalfRT0, true);
                useEffect(effectLib.dirBlur, renderSpec.wHalfRT1);
                gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, 0.0, p, 0.0, s);
                drawEffect(effectLib.dirBlur);
                unuseEffect(effectLib.dirBlur);
            }

            //display
            gl.bindFramebuffer(gl.FRAMEBUFFER, null);
            gl.viewport(0, 0, renderSpec.width, renderSpec.height);
            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);

            useEffect(effectLib.finalComp, renderSpec.mainRT);
            gl.uniform1i(effectLib.finalComp.program.uniforms.uBloom, 1);
            gl.activeTexture(gl.TEXTURE1);
            gl.bindTexture(gl.TEXTURE_2D, renderSpec.wHalfRT0.texture);
            drawEffect(effectLib.finalComp);
            unuseEffect(effectLib.finalComp);

            gl.enable(gl.DEPTH_TEST);
        }

        /////
        var SceneEnv = {};
        function createScene() {
            createEffectLib();
            createBackground();
            createPointFlowers();
            createPostProcess();
            sceneStandBy = true;
        }

        function initScene() {
            initBackground();
            initPointFlowers();
            initPostProcess();

            //camera.position.z = 17.320508;
            camera.position.z = pointFlower.area.z + projection.nearfar[0];
            projection.angle = Math.atan2(pointFlower.area.y, camera.position.z + pointFlower.area.z) * 180.0 / Math.PI * 2.0;
            Matrix44.loadProjection(projection.matrix, renderSpec.aspect, projection.angle, projection.nearfar[0], projection.nearfar[1]);
        }

        function renderScene() {
            //draw
            Matrix44.loadLookAt(camera.matrix, camera.position, camera.lookat, camera.up);

            gl.enable(gl.DEPTH_TEST);

            //gl.bindFramebuffer(gl.FRAMEBUFFER, null);
            gl.bindFramebuffer(gl.FRAMEBUFFER, renderSpec.mainRT.frameBuffer);
            gl.viewport(0, 0, renderSpec.mainRT.width, renderSpec.mainRT.height);
            gl.clearColor(0.005, 0, 0.05, 0);
            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);

            renderBackground();
            renderPointFlowers();
            renderPostProcess();
        }

        /////
        function onResize(e) {
            makeCanvasFullScreen(document.getElementById("sakura"));
            setViewports();
            if (sceneStandBy) {
                initScene();
            }
        }

        function setViewports() {
            renderSpec.setSize(gl.canvas.width, gl.canvas.height);

            gl.clearColor(0.2, 0.2, 0.5, 1.0);
            gl.viewport(0, 0, renderSpec.width, renderSpec.height);

            var rtfunc = function (rtname, rtw, rth) {
                var rt = renderSpec[rtname];
                if (rt) deleteRenderTarget(rt);
                renderSpec[rtname] = createRenderTarget(rtw, rth);
            };
            rtfunc('mainRT', renderSpec.width, renderSpec.height);
            rtfunc('wFullRT0', renderSpec.width, renderSpec.height);
            rtfunc('wFullRT1', renderSpec.width, renderSpec.height);
            rtfunc('wHalfRT0', renderSpec.halfWidth, renderSpec.halfHeight);
            rtfunc('wHalfRT1', renderSpec.halfWidth, renderSpec.halfHeight);
        }

        function render() {
            renderScene();
        }

        var animating = true;
        function toggleAnimation(elm) {
            animating ^= true;
            if (animating) animate();
            if (elm) {
                elm.innerHTML = animating ? "Stop" : "Start";
            }
        }

        function stepAnimation() {
            if (!animating) animate();
        }

        function animate() {
            var curdate = new Date();
            timeInfo.elapsed = (curdate - timeInfo.start) / 1000.0;
            timeInfo.delta = (curdate - timeInfo.prev) / 1000.0;
            timeInfo.prev = curdate;

            if (animating) requestAnimationFrame(animate);
            render();
        }

        function makeCanvasFullScreen(canvas) {
            var b = document.body;
            var d = document.documentElement;
            fullw = Math.max(b.clientWidth, b.scrollWidth, d.scrollWidth, d.clientWidth);
            fullh = Math.max(b.clientHeight, b.scrollHeight, d.scrollHeight, d.clientHeight);
            canvas.width = fullw;
            canvas.height = fullh;
        }

        window.addEventListener('load', function (e) {
            var canvas = document.getElementById("sakura");
            try {
                makeCanvasFullScreen(canvas);
                gl = canvas.getContext('experimental-webgl');
            } catch (e) {
                alert("WebGL not supported." + e);
                console.error(e);
                return;
            }

            window.addEventListener('resize', onResize);

            setViewports();
            createScene();
            initScene();

            timeInfo.start = new Date();
            timeInfo.prev = timeInfo.start;
            animate();
        });

        //set window.requestAnimationFrame
        (function (w, r) {
            w['r' + r] = w['r' + r] || w['webkitR' + r] || w['mozR' + r] || w['msR' + r] || w['oR' + r] || function (c) { w.setTimeout(c, 1000 / 60); };
        })(window, 'equestAnimationFrame');


    </script>

    <script id="sakura_point_vsh" type="x-shader/x_vertex">
        uniform mat4 uProjection;
        uniform mat4 uModelview;
        uniform vec3 uResolution;
        uniform vec3 uOffset;
        uniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius
        uniform vec3 uFade; //x:start distance, y:half distance, z:near fade start

        attribute vec3 aPosition;
        attribute vec3 aEuler;
        attribute vec2 aMisc; //x:size, y:fade

        varying vec3 pposition;
        varying float psize;
        varying float palpha;
        varying float pdist;

        //varying mat3 rotMat;
        varying vec3 normX;
        varying vec3 normY;
        varying vec3 normZ;
        varying vec3 normal;

        varying float diffuse;
        varying float specular;
        varying float rstop;
        varying float distancefade;

        void main(void) {
        // Projection is based on vertical angle
        vec4 pos = uModelview * vec4(aPosition + uOffset, 1.0);
        gl_Position = uProjection * pos;
        gl_PointSize = aMisc.x * uProjection[1][1] / -pos.z * uResolution.y * 0.5;

        pposition = pos.xyz;
        psize = aMisc.x;
        pdist = length(pos.xyz);
        palpha = smoothstep(0.0, 1.0, (pdist - 0.1) / uFade.z);

        vec3 elrsn = sin(aEuler);
        vec3 elrcs = cos(aEuler);
        mat3 rotx = mat3(
        1.0, 0.0, 0.0,
        0.0, elrcs.x, elrsn.x,
        0.0, -elrsn.x, elrcs.x
        );
        mat3 roty = mat3(
        elrcs.y, 0.0, -elrsn.y,
        0.0, 1.0, 0.0,
        elrsn.y, 0.0, elrcs.y
        );
        mat3 rotz = mat3(
        elrcs.z, elrsn.z, 0.0,
        -elrsn.z, elrcs.z, 0.0,
        0.0, 0.0, 1.0
        );
        mat3 rotmat = rotx * roty * rotz;
        normal = rotmat[2];

        mat3 trrotm = mat3(
        rotmat[0][0], rotmat[1][0], rotmat[2][0],
        rotmat[0][1], rotmat[1][1], rotmat[2][1],
        rotmat[0][2], rotmat[1][2], rotmat[2][2]
        );
        normX = trrotm[0];
        normY = trrotm[1];
        normZ = trrotm[2];

        const vec3 lit = vec3(0.6917144638660746, 0.6917144638660746, -0.20751433915982237);

        float tmpdfs = dot(lit, normal);
        if(tmpdfs < 0.0) {
        normal = -normal;
        tmpdfs = dot(lit, normal);
        }
        diffuse = 0.4 + tmpdfs;

        vec3 eyev = normalize(-pos.xyz);
        if(dot(eyev, normal) > 0.0) {
        vec3 hv = normalize(eyev + lit);
        specular = pow(max(dot(hv, normal), 0.0), 20.0);
        }
        else {
        specular = 0.0;
        }

        rstop = clamp((abs(pdist - uDOF.x) - uDOF.y) / uDOF.z, 0.0, 1.0);
        rstop = pow(rstop, 0.5);
        //-0.69315 = ln(0.5)
        distancefade = min(1.0, exp((uFade.x - pdist) * 0.69315 / uFade.y));
        }
    </script>
    <script id="sakura_point_fsh" type="x-shader/x_fragment">
        #ifdef GL_ES

        //precision mediump float;
        precision highp float;
        #endif

        uniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius
        uniform vec3 uFade; //x:start distance, y:half distance, z:near fade start

        const vec3 fadeCol = vec3(0.08, 0.03, 0.06);

        varying vec3 pposition;
        varying float psize;
        varying float palpha;
        varying float pdist;

        //varying mat3 rotMat;
        varying vec3 normX;
        varying vec3 normY;
        varying vec3 normZ;
        varying vec3 normal;

        varying float diffuse;
        varying float specular;
        varying float rstop;
        varying float distancefade;

        float ellipse(vec2 p, vec2 o, vec2 r) {
        vec2 lp = (p - o) / r;
        return length(lp) - 1.0;
        }

        void main(void) {
        vec3 p = vec3(gl_PointCoord - vec2(0.5, 0.5), 0.0) * 2.0;
        vec3 d = vec3(0.0, 0.0, -1.0);
        float nd = normZ.z; //dot(-normZ, d);
        if(abs(nd) < 0.0001) discard;

        float np = dot(normZ, p);
        vec3 tp = p + d * np / nd;
        vec2 coord = vec2(dot(normX, tp), dot(normY, tp));

        //angle = 15 degree
        const float flwrsn = 0.258819045102521;
        const float flwrcs = 0.965925826289068;
        mat2 flwrm = mat2(flwrcs, -flwrsn, flwrsn, flwrcs);
        vec2 flwrp = vec2(abs(coord.x), coord.y) * flwrm;

        float r;
        if(flwrp.x < 0.0) {
        r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.36, 0.96) * 0.5);
        }
        else {
        r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.58, 0.96) * 0.5);
        }

        if(r > rstop) discard;

        vec3 col = mix(vec3(1.0, 0.8, 0.75), vec3(1.0, 0.9, 0.87), r);
        float grady = mix(0.0, 1.0, pow(coord.y * 0.5 + 0.5, 0.35));
        col *= vec3(1.0, grady, grady);
        col *= mix(0.8, 1.0, pow(abs(coord.x), 0.3));
        col = col * diffuse + specular;

        col = mix(fadeCol, col, distancefade);

        float alpha = (rstop > 0.001)? (0.5 - r / (rstop * 2.0)) : 1.0;
        alpha = smoothstep(0.0, 1.0, alpha) * palpha;

        gl_FragColor = vec4(col * 0.5, alpha);
        }
    </script>
    <!-- effects -->
    <script id="fx_common_vsh" type="x-shader/x_vertex">
        uniform vec3 uResolution;
        attribute vec2 aPosition;

        varying vec2 texCoord;
        varying vec2 screenCoord;

        void main(void) {
        gl_Position = vec4(aPosition, 0.0, 1.0);
        texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);
        screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);
        }
    </script>
    <script id="bg_fsh" type="x-shader/x_fragment">
        #ifdef GL_ES
        //precision mediump float;
        precision highp float;
        #endif

        uniform vec2 uTimes;

        varying vec2 texCoord;
        varying vec2 screenCoord;

        void main(void) {
        vec3 col;
        float c;
        vec2 tmpv = texCoord * vec2(0.8, 1.0) - vec2(0.95, 1.0);
        c = exp(-pow(length(tmpv) * 1.8, 2.0));
        col = mix(vec3(0.02, 0.0, 0.03), vec3(0.96, 0.98, 1.0) * 1.5, c);
        gl_FragColor = vec4(col * 0.5, 1.0);
        }
    </script>
    <script id="fx_brightbuf_fsh" type="x-shader/x_fragment">
        #ifdef GL_ES
        //precision mediump float;
        precision highp float;
        #endif
        uniform sampler2D uSrc;
        uniform vec2 uDelta;

        varying vec2 texCoord;
        varying vec2 screenCoord;

        void main(void) {
        vec4 col = texture2D(uSrc, texCoord);
        gl_FragColor = vec4(col.rgb * 2.0 - vec3(0.5), 1.0);
        }
    </script>
    <script id="fx_dirblur_r4_fsh" type="x-shader/x_fragment">
        #ifdef GL_ES
        //precision mediump float;
        precision highp float;
        #endif
        uniform sampler2D uSrc;
        uniform vec2 uDelta;
        uniform vec4 uBlurDir; //dir(x, y), stride(z, w)

        varying vec2 texCoord;
        varying vec2 screenCoord;

        void main(void) {
        vec4 col = texture2D(uSrc, texCoord);
        col = col + texture2D(uSrc, texCoord + uBlurDir.xy * uDelta);
        col = col + texture2D(uSrc, texCoord - uBlurDir.xy * uDelta);
        col = col + texture2D(uSrc, texCoord + (uBlurDir.xy + uBlurDir.zw) * uDelta);
        col = col + texture2D(uSrc, texCoord - (uBlurDir.xy + uBlurDir.zw) * uDelta);
        gl_FragColor = col / 5.0;
        }
    </script>
    <!-- effect fragment shader template -->
    <script id="fx_common_fsh" type="x-shader/x_fragment">
        #ifdef GL_ES
        //precision mediump float;
        precision highp float;
        #endif
        uniform sampler2D uSrc;
        uniform vec2 uDelta;

        varying vec2 texCoord;
        varying vec2 screenCoord;

        void main(void) {
        gl_FragColor = texture2D(uSrc, texCoord);
        }
    </script>
    <!-- post processing -->
    <script id="pp_final_vsh" type="x-shader/x_vertex">
        uniform vec3 uResolution;
        attribute vec2 aPosition;
        varying vec2 texCoord;
        varying vec2 screenCoord;
        void main(void) {
        gl_Position = vec4(aPosition, 0.0, 1.0);
        texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);
        screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);
        }
    </script>
    <script id="pp_final_fsh" type="x-shader/x_fragment">
        #ifdef GL_ES
        //precision mediump float;
        precision highp float;
        #endif
        uniform sampler2D uSrc;
        uniform sampler2D uBloom;
        uniform vec2 uDelta;
        varying vec2 texCoord;
        varying vec2 screenCoord;
        void main(void) {
        vec4 srccol = texture2D(uSrc, texCoord) * 2.0;
        vec4 bloomcol = texture2D(uBloom, texCoord);
        vec4 col;
        col = srccol + bloomcol * (vec4(1.0) + srccol);
        col *= smoothstep(1.0, 0.0, pow(length((texCoord - vec2(0.5)) * 2.0), 1.2) * 0.5);
        col = pow(col, vec4(0.45454545454545)); //(1.0 / 2.2)

        gl_FragColor = vec4(col.rgb, 1.0);
        gl_FragColor.a = 1.0;
        }
    </script>
*@